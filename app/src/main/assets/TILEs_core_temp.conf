///////////////////////////////////////////////////////////////////////////////////////
///////// > openSMILE configuration file for ComParE <               //////////////////
/////////                                                            //////////////////
///////// (c) audEERING GmbH,                                        //////////////////
/////////     All rights reserverd.                                  //////////////////
///////////////////////////////////////////////////////////////////////////////////////
[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory
instance[waveIn].type=cOpenslesSource
printLevelStats = 5
profiling = 0
nThreads = 1

[componentInstances:cComponentManager]
instance[is13_frame60].type=cFramer
instance[is13_win60].type=cWindower
instance[is13_fft60].type=cTransformFFT
instance[is13_fftmp60].type=cFFTmagphase

[waveIn:cOpenslesSource]
writer.dmLevel=wave
monoMixdown = 0
writer.levelconf.growDyn = 0
writer.levelconf.isRb = 1
writer.levelconf.nT = 32000
sampleRate = 16000
nBits = 16
channels = 1
audioBuffersize = 512

[is13_frame60:cFramer]
reader.dmLevel=wave
writer.dmLevel=is13_frame60
writer.levelconf.growDyn = 0
\{\cm[bufferModeRbConf{BufferModeRb.conf.inc}:path to included config to set the buffer mode for the standard ringbuffer levels]}
frameSize = 0.060
frameStep = 0.010
frameCenterSpecial = left


[is13_win60:cWindower]
reader.dmLevel=is13_frame60
writer.dmLevel=is13_winG60
writer.levelconf.growDyn = 0
winFunc=gauss
gain=1.0
sigma=0.4
writer.levelconf.noHang = 2


[is13_fft60:cTransformFFT]
reader.dmLevel=is13_winG60
writer.dmLevel=is13_fftcG60
;writer.levelconf.growDyn = 0
zeroPadSymmetric = 1


[is13_fftmp60:cFFTmagphase]
reader.dmLevel=is13_fftcG60
writer.dmLevel=is13_fftmagG60
writer.levelconf.growDyn = 0
writer.levelconf.nT = 200


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[componentInstances:cComponentManager]
instance[is13_frame25].type=cFramer
instance[is13_win25].type=cWindower
instance[is13_fft25].type=cTransformFFT
instance[is13_fftmp25].type=cFFTmagphase

[is13_frame25:cFramer]
reader.dmLevel=wave
writer.dmLevel=is13_frame25
\{\cm[bufferModeRbConf]}
frameSize = 0.020
frameStep = 0.010
frameCenterSpecial = left

[is13_win25:cWindower]
reader.dmLevel=is13_frame25
writer.dmLevel=is13_winH25
winFunc=hamming

[is13_fft25:cTransformFFT]
reader.dmLevel=is13_winH25
writer.dmLevel=is13_fftcH25
writer.levelconf.growDyn = 0
zeroPadSymmetric = 1
;;zeroPadSymmetric = 0

[is13_fftmp25:cFFTmagphase]
reader.dmLevel=is13_fftcH25
writer.dmLevel=is13_fftmagH25
;writer.levelconf.growDyn = 0

;;;;;;;; LPC ;;;;;;;;;;;
[pe:cVectorPreemphasis]
reader.dmLevel=is13_frame25
writer.dmLevel=framespe
copyInputName = 1
processArrayFields = 1
k=0.97

[lpc:cLpc]
reader.dmLevel=framespe
writer.dmLevel=lpc
copyInputName = 1
processArrayFields = 1
method = acf
p = 8
saveLPCoeff = 1
lpGain = 0
saveRefCoeff = 0
residual = 0
forwardFilter = 0
lpSpectrum = 0


;;;;;;;;;;;;  smooth
[componentInstances:cComponentManager]
instance[is13_smoSpec].type=cContourSmoother

[is13_smoSpec:cContourSmoother]
reader.dmLevel = lpc
writer.dmLevel = is13_lld_spec
\{\cm[bufferModeConf]}
nameAppend = sma
copyInputName = 1
noPostEOIprocessing = 0
smaWin = 3

;;;;;;;;; deltas
[componentInstances:cComponentManager]
instance[is13_deSpec].type=cDeltaRegression

[is13_deSpec:cDeltaRegression]
reader.dmLevel = is13_lld_spec
writer.dmLevel = is13_lld_spec_de
\{\cm[bufferModeConf]}


;;;;;;;;; csv
[componentInstances:cComponentManager]
instance[csvSink].type=cCsvSink

[csvSink:cCsvSink]
reader.dmLevel = is13_lld_spec;is13_lld_spec_de
filename = \cm[output(O){?}:output CSV file for summarised parameters, set to a valid filename to enable this output sink, data is appended if file exists]
append = 0
timestamp = 1
errorOnNoOutput = 1

[componentInstances:cComponentManager]
instance[waveSink].type = cWaveSink

[waveSink:cWaveSink]
reader.dmLevel = wave
filename = \cm[outputfile(W){?}:file name of the output wav file]
sampleFormat = 16bit
blocksize=500





