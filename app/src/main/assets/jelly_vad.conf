// This file is part of openSMILE.
// (c) 2016 by audEERING GmbH. All rights reserved.
// See file COPYING for details on licensing terms.
//
// Written by Florian Eyben. fe@audeering.com
// Revised by Tiantian Feng, tiantiaf@usc.edu

[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory
instance[waveIn].type=cOpenslesSource
instance[jniMessageInterface].type = cJniMessageInterface
printLevelStats = 5
profiling = 0
nThreads = 1

[waveIn:cOpenslesSource]
writer.dmLevel=wave
monoMixdown = 0
writer.levelconf.growDyn = 0
writer.levelconf.isRb = 1
writer.levelconf.nT = 16000
sampleRate = 8000
nBits = 16
channels = 1
audioBuffersize = 256

[componentInstances:cComponentManager]
instance[frames].type=cFramer
instance[framespe].type=cVectorPreemphasis
instance[winframe].type=cWindower
instance[energy].type=cEnergy
instance[isTurn].type=cTurnDetector

[frames:cFramer]
reader.dmLevel = wave
writer.dmLevel = frames
writer.levelconf.growDyn = 0
writer.levelconf.isRb = 1
writer.levelconf.nT = 10
writer.levelconf.noHang = 2
frameSize = 0.040
frameStep = 0.010

[framespe:cVectorPreemphasis]
reader.dmLevel=frames
writer.dmLevel=framespe
copyInputName = 1
processArrayFields = 1
k=0.97

[winframe:cWindower]
reader.dmLevel=framespe
writer.dmLevel=winframe
copyInputName = 1
processArrayFields = 1
winFunc = ham
gain = 1.0
offset = 0

[energy:cEnergy]
reader.dmLevel=winframe
writer.dmLevel=energy
rms=1
log=0

// the voice activity detection (turn detector)
[isTurn:cTurnDetector]
reader.dmLevel=energy
writer.dmLevel=isTurn
; overwrite data in output level, if it has not been read and level is full
; we must set this here, since the level isTurn is a dead-end in our configuration
writer.levelconf.noHang=1
; send a message to the functionals component at turn end
;messageRecp = jniMessageInterface
; send turn start / turn end event messages to the debug turn wave file output component
;eventRecp = turnDump
;; you may not increase this over the writer.levelconf.nT value of the lld and lld_de levels!
;; so by default not more than 24!
maxTurnLength = 12
maxTurnLengthGrace = 3
idx = 0
nPost = 30
nPre = 10
useRMS = 1
minTurnLengthTurnFrameTimeMessage=0.9
; disable auto adjustment of VAD threshold, this does not work well yet.
autoThreshold = 0
; instead, set the threshold manually to a default value.
; this derived from the RMS energy from normalised sample values (0..1)
; --> !!!!! you might need to adjust this value depending on your recording setup !!!!!!! <-------------------
threshold = 0.0038
; --> !!!!! you might need to adjust this value depending on your recording setup !!!!!!! <-------------------


\{message_vad.conf.inc}

[jniMessageInterface:cJniMessageInterface]
sendMessagesInTick = 100
JNIcallbackClass = com/audeering/opensmile/androidtemplate/SmileJNI
JNIstringReceiverMethod = receiveText

