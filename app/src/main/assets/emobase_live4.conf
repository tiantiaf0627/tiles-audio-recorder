
///////////////////////////////////////////////////////////////////////////////////////
///////// > openSMILE configuration file for live emotion recognition < ///////////////
/////////   base set of 988 features, 1st level functionals          //////////////////
/////////   of low-level descriptors such as MFCC, Pitch, LSP, ...   //////////////////
/////////                                                            //////////////////
/////////  * written 2009 by Florian Eyben *                         //////////////////
/////////                                                            //////////////////
///////// (c) 2014 audEERING UG (haftungsbeschrï¿½nkt),                //////////////////
/////////     All rights reserverd.                                  //////////////////
///////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////
;
; This section is always required in openSMILE configuration files
;   it configures the componentManager and gives a list of all components which are to be loaded
; The order in which the components are listed should match 
;   the order of the data flow for most efficient processing
;
///////////////////////////////////////////////////////////////////////////////////////
[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory
instance[waveIn].type=cOpenslesSource
printLevelStats = 5
profiling = 0
nThreads = 1

[componentInstances:cComponentManager]
instance[fr25].type=cFramer
 ;; VAD (energy-based)
instance[energy].type=cEnergy
instance[turn].type=cTurnDetector
 ;;; 40 ms frames features:
instance[fr40].type=cFramer
instance[w40].type=cWindower
instance[fft40].type=cTransformFFT
instance[fftmagphase40].type=cFFTmagphase
instance[acf40].type=cAcf
instance[cepstrum40].type=cAcf
 ; Pitch...
instance[pitchACF].type=cPitchACF
 ;;; 25 ms frames features:
instance[pe].type=cVectorPreemphasis
instance[win].type=cWindower
instance[fft].type=cTransformFFT
instance[fftmagphase].type=cFFTmagphase
instance[mspec].type=cMelspec
 ; MFCC
instance[mfcc].type=cMfcc
instance[lpc].type=cLpc
 ; Line Spectral Frequencies
instance[lsp].type=cLsp
 ; Zero-Crossings
instance[mzcr].type=cMZcr
 ; Intensity and Loudness (narrow-band approximation)
instance[intens].type=cIntensity

;;; all LLD concattenated and smoothed using a moving average filter
instance[lld].type=cContourSmoother
; delta coefficients of LLD
instance[delta1].type=cDeltaRegression
;;; functionals over FULL input (e.g. turns)




/////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////   component configuration  ////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////
; the following sections configure the components listed above
; a help on configuration parameters can be obtained with 
;  SMILExtract -H
; or
;  SMILExtract -H configTypeName (= componentTypeName)
/////////////////////////////////////////////////////////////////////////////////////////////

[waveIn:cOpenslesSource]
writer.dmLevel=wave
monoMixdown = 0
writer.levelconf.growDyn = 0
writer.levelconf.isRb = 1
writer.levelconf.nT = 32000
sampleRate = 16000
nBits = 16
channels = 1
audioBuffersize = 512

[fr40:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames40
writer.levelconf.growDyn = 0
writer.levelconf.isRb = 1
;writer.levelconf.nT = 10
writer.levelconf.noHang = 2
frameSize = 0.040
frameStep = 0.010
frameMode = fixed
frameCenterSpecial = center

[w40:cWindower]
reader.dmLevel=frames40
writer.dmLevel=win40frame
copyInputName = 1
processArrayFields = 1
winFunc = ham
gain = 1.0
offset = 0

[fft40:cTransformFFT]
reader.dmLevel=win40frame
writer.dmLevel=fftc40
copyInputName = 1
processArrayFields = 1
inverse = 0
 ; for compatibility with 2.2.0 and older versions
zeroPadSymmetric = 0

[fftmagphase40:cFFTmagphase]
reader.dmLevel=fftc40
writer.dmLevel=fftmag40
copyInputName = 1
processArrayFields = 1
inverse = 0
magnitude = 1
phase = 0

[acf40:cAcf]
reader.dmLevel=fftmag40
writer.dmLevel=acf40
nameAppend = acf
copyInputName = 1
processArrayFields = 1
usePower = 1
cepstrum = 0
acfCepsNormOutput = 0

[cepstrum40:cAcf]
reader.dmLevel=fftmag40
writer.dmLevel=cepstrum40
nameAppend = acf
copyInputName = 1
processArrayFields = 1
usePower = 1
cepstrum = 1
acfCepsNormOutput = 0
oldCompatCepstrum = 1
absCepstrum = 1

[pitchACF:cPitchACF]
  ; the pitchACF component must ALWAYS read from acf AND cepstrum in the given order!
reader.dmLevel=acf40;cepstrum40
writer.dmLevel=pitch
processArrayFields=0
maxPitch = 500
voiceProb = 1
voiceQual = 0
HNR = 0
F0 = 1
F0raw = 0
F0env = 1
voicingCutoff = 0.550000

[fr25:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames
frameSize = 0.025
frameStep = 0.010
frameMode = fixed
frameCenterSpecial = center


[pe:cVectorPreemphasis]
reader.dmLevel=frames
writer.dmLevel=framespe
copyInputName = 1
processArrayFields = 1
k=0.97

[win:cWindower]
reader.dmLevel=framespe
writer.dmLevel=winframe
copyInputName = 1
processArrayFields = 1
winFunc = ham
gain = 1.0
offset = 0

[fft:cTransformFFT]
reader.dmLevel=winframe
writer.dmLevel=fftc
copyInputName = 1
processArrayFields = 1
inverse = 0
 ; for compatibility with 2.2.0 and older versions
zeroPadSymmetric = 0

[fftmagphase:cFFTmagphase]
reader.dmLevel=fftc
writer.dmLevel=fftmag
copyInputName = 1
processArrayFields = 1
inverse = 0
magnitude = 1
phase = 0

[mspec:cMelspec]
reader.dmLevel=fftmag
writer.dmLevel=mspec1
copyInputName = 1
processArrayFields = 1
htkcompatible = 1
nBands = 26
lofreq = 0
hifreq = 8000
usePower = 1
inverse = 0
specScale = mel

[mfcc:cMfcc]
reader.dmLevel=mspec1
writer.dmLevel=mfcc1
copyInputName = 0
processArrayFields = 1
firstMfcc = 1
lastMfcc =  12
cepLifter = 22.0
htkcompatible = 1

[lpc:cLpc]
reader.dmLevel=framespe
writer.dmLevel=lpc
copyInputName = 1
processArrayFields = 1
method = acf
p = 8
saveLPCoeff = 1
lpGain = 0
saveRefCoeff = 0
residual = 0
forwardFilter = 0
lpSpectrum = 0

[lsp:cLsp]
reader.dmLevel=lpc
writer.dmLevel=lsp
copyInputName = 1
processArrayFields = 0

[intens:cIntensity]
reader.dmLevel=frames
writer.dmLevel=intens
copyInputName = 1
processArrayFields = 1
intensity=1
loudness =1

[mzcr:cMZcr]
reader.dmLevel=frames
writer.dmLevel=mzcr
copyInputName = 1
processArrayFields = 1
zcr = 1
amax = 0
mcr = 0
maxmin = 0
dc = 0


[lld:cContourSmoother]
reader.dmLevel=intens;mfcc1;lsp;mzcr;pitch
writer.dmLevel=lld
writer.levelconf.nT = 2500
writer.levelconf.isRb=1
writer.levelconf.growDyn=0
nameAppend = sma
copyInputName = 1
noPostEOIprocessing = 0
smaWin = 3


// ---- delta regression of LLD ----
[delta1:cDeltaRegression]
reader.dmLevel=lld
writer.dmLevel=lld_de
blocksize=1
writer.levelconf.nT = 2500
writer.levelconf.isRb=1
writer.levelconf.growDyn=0
nameAppend = de
copyInputName = 1
noPostEOIprocessing = 0
deltawin=2

[energy:cEnergy]
reader.dmLevel=winframe
writer.dmLevel=energy
rms=1
log=0

// the voice activity detection (turn detector)
[turn:cTurnDetector]
reader.dmLevel=energy
writer.dmLevel=isTurn
 ; overwrite data in output level, if it has not been read and level is full
 ; we must set this here, since the level isTurn is a dead-end in our configuration
writer.levelconf.noHang=1
 ; send a message to the functionals component at turn end
;messageRecp = functL1
 ; send turn start / turn end event messages to the debug turn wave file output component
;eventRecp = turnDump
  ;; you may not increase this over the writer.levelconf.nT value of the lld and lld_de levels!
  ;; so by default not more than 24!
maxTurnLength = 12
maxTurnLengthGrace = 3
idx = 0
nPost = 30
nPre = 10
useRMS = 1
 ; disable auto adjustment of VAD threshold, this does not work well yet.
autoThreshold = 0
 ; instead, set the threshold manually to a default value.
 ; this derived from the RMS energy from normalised sample values (0..1)
 ; --> !!!!! you might need to adjust this value depending on your recording setup !!!!!!! <-------------------
threshold = 0.0035
 ; --> !!!!! you might need to adjust this value depending on your recording setup !!!!!!! <-------------------

;[componentInstances:cComponentManager]
;instance[fftSelect].type=cDataSelector

;[fftSelect:cDataSelector]
;reader.dmLevel = fftc40
;writer.dmLevel = fftc40_select
;writer.levelconf.growDyn=0
;elementMode=0
;selected = pcm[1];pcm[3];pcm[5];pcm[7];pcm[9];pcm[11];pcm[13];pcm[15];pcm[17];pcm[19];pcm[21];pcm[23];pcm[25];pcm[27];pcm[29];pcm[31];pcm[33];pcm[35];pcm[37];pcm[39];pcm[41];pcm[43];pcm[45];pcm[47];pcm[49];pcm[51];pcm[53];pcm[55];pcm[57];pcm[59];pcm[61];pcm[63];pcm[65];pcm[67];pcm[69];pcm[71];pcm[73];pcm[75];pcm[77];pcm[79];pcm[81];pcm[83];pcm[85];pcm[87];pcm[89];pcm[91];pcm[93];pcm[95];pcm[97];pcm[99];pcm[101];pcm[103];pcm[105];pcm[107];pcm[109];pcm[111];pcm[113];pcm[115];pcm[117];pcm[119];pcm[121];pcm[123];pcm[125];pcm[127];pcm[129];pcm[131];pcm[133];pcm[135];pcm[137];pcm[139];pcm[141];pcm[143];pcm[145];pcm[147];pcm[149];pcm[151];pcm[153];pcm[155];pcm[157];pcm[159];pcm[161];pcm[163];pcm[165];pcm[167];pcm[169];pcm[171];pcm[173];pcm[175];pcm[177];pcm[179];pcm[181];pcm[183];pcm[185];pcm[187];pcm[189];pcm[191];pcm[193];pcm[195];pcm[197];pcm[199];pcm[201];pcm[203];pcm[205];pcm[207];pcm[209];pcm[211];pcm[213];pcm[215];pcm[217];pcm[219];pcm[221];pcm[223];pcm[225];pcm[227];pcm[229];pcm[231];pcm[233];pcm[235];pcm[237];pcm[239];pcm[241];pcm[243];pcm[245];pcm[247];pcm[249];pcm[251];pcm[253];pcm[255];pcm[257];pcm[259];pcm[261];pcm[263];pcm[265];pcm[267];pcm[269];pcm[271];pcm[273];pcm[275];pcm[277];pcm[279];pcm[281];pcm[283];pcm[285];pcm[287];pcm[289];pcm[291];pcm[293];pcm[295];pcm[297];pcm[299];pcm[301];pcm[303];pcm[305];pcm[307];pcm[309];pcm[311];pcm[313];pcm[315];pcm[317];pcm[319];pcm[321];pcm[323];pcm[325];pcm[327];pcm[329];pcm[331];pcm[333];pcm[335];pcm[337];pcm[339];pcm[341];pcm[343];pcm[345];pcm[347];pcm[349];pcm[351];pcm[353];pcm[355];pcm[357];pcm[359];pcm[361];pcm[363];pcm[365];pcm[367];pcm[369];pcm[371];pcm[373];pcm[375];pcm[377];pcm[379];pcm[381];pcm[383];pcm[385];pcm[387];pcm[389];pcm[391];pcm[393];pcm[395];pcm[397];pcm[399];pcm[401];pcm[403];pcm[405];pcm[407];pcm[409];pcm[411];pcm[413];pcm[415];pcm[417];pcm[419];pcm[421];pcm[423];pcm[425];pcm[427];pcm[429];pcm[431];pcm[433];pcm[435];pcm[437];pcm[439];pcm[441];pcm[443];pcm[445];pcm[447];pcm[449];pcm[451];pcm[453];pcm[455];pcm[457];pcm[459];pcm[461];pcm[463];pcm[465];pcm[467];pcm[469];pcm[471];pcm[473];pcm[475];pcm[477];pcm[479];pcm[481];pcm[483];pcm[485];pcm[487];pcm[489];pcm[491];pcm[493];pcm[495];pcm[497];pcm[499];pcm[501];pcm[503];pcm[505];pcm[507];pcm[509];pcm[511];pcm[513];pcm[515];pcm[517];pcm[519];pcm[521];pcm[523];pcm[525];pcm[527];pcm[529];pcm[531];pcm[533];pcm[535];pcm[537];pcm[539];pcm[541];pcm[543];pcm[545];pcm[547];pcm[549];pcm[551];pcm[553];pcm[555];pcm[557];pcm[559];pcm[561];pcm[563];pcm[565];pcm[567];pcm[569];pcm[571];pcm[573];pcm[575];pcm[577];pcm[579];pcm[581];pcm[583];pcm[585];pcm[587];pcm[589];pcm[591];pcm[593];pcm[595];pcm[597];pcm[599];pcm[601];pcm[603];pcm[605];pcm[607];pcm[609];pcm[611];pcm[613];pcm[615];pcm[617];pcm[619];pcm[621];pcm[623];pcm[625];pcm[627];pcm[629];pcm[631];pcm[633];pcm[635];pcm[637];pcm[639];pcm[641];pcm[643];pcm[645];pcm[647];pcm[649];pcm[651];pcm[653];pcm[655];pcm[657];pcm[659];pcm[661];pcm[663];pcm[665];pcm[667];pcm[669];pcm[671];pcm[673];pcm[675];pcm[677];pcm[679];pcm[681];pcm[683];pcm[685];pcm[687];pcm[689];pcm[691];pcm[693];pcm[695];pcm[697];pcm[699];pcm[701];pcm[703];pcm[705];pcm[707];pcm[709];pcm[711];pcm[713];pcm[715];pcm[717];pcm[719];pcm[721];pcm[723];pcm[725];pcm[727];pcm[729];pcm[731];pcm[733];pcm[735];pcm[737];pcm[739];pcm[741];pcm[743];pcm[745];pcm[747];pcm[749];pcm[751];pcm[753];pcm[755];pcm[757];pcm[759];pcm[761];pcm[763];pcm[765];pcm[767];pcm[769];pcm[771];pcm[773];pcm[775];pcm[777];pcm[779];pcm[781];pcm[783];pcm[785];pcm[787];pcm[789];pcm[791];pcm[793];pcm[795];pcm[797];pcm[799];pcm[801];pcm[803];pcm[805];pcm[807];pcm[809];pcm[811];pcm[813];pcm[815];pcm[817];pcm[819];pcm[821];pcm[823];pcm[825];pcm[827];pcm[829];pcm[831];pcm[833];pcm[835];pcm[837];pcm[839];pcm[841];pcm[843];pcm[845];pcm[847];pcm[849];pcm[851];pcm[853];pcm[855];pcm[857];pcm[859];pcm[861];pcm[863];pcm[865];pcm[867];pcm[869];pcm[871];pcm[873];pcm[875];pcm[877];pcm[879];pcm[881];pcm[883];pcm[885];pcm[887];pcm[889];pcm[891];pcm[893];pcm[895];pcm[897];pcm[899];pcm[901];pcm[903];pcm[905];pcm[907];pcm[909];pcm[911];pcm[913];pcm[915];pcm[917];pcm[919];pcm[921];pcm[923];pcm[925];pcm[927];pcm[929];pcm[931];pcm[933];pcm[935];pcm[937];pcm[939];pcm[941];pcm[943];pcm[945];pcm[947];pcm[949];pcm[951];pcm[953];pcm[955];pcm[957];pcm[959];pcm[961];pcm[963];pcm[965];pcm[967];pcm[969];pcm[971];pcm[973];pcm[975];pcm[977];pcm[979];pcm[981];pcm[983];pcm[985];pcm[987];pcm[989];pcm[991];pcm[993];pcm[995];pcm[997];pcm[999];pcm[1001];pcm[1003];pcm[1005];pcm[1007];pcm[1009];pcm[1011];pcm[1013];pcm[1015];pcm[1017];pcm[1019];pcm[1021];pcm[1023]
;newNames = pcm_final[0];pcm_final[1];pcm_final[2];pcm_final[3];pcm_final[4];pcm_final[5];pcm_final[6];pcm_final[7];pcm_final[8];pcm_final[9];pcm_final[10];pcm_final[11];pcm_final[12];pcm_final[13];pcm_final[14];pcm_final[15];pcm_final[16];pcm_final[17];pcm_final[18];pcm_final[19];pcm_final[20];pcm_final[21];pcm_final[22];pcm_final[23];pcm_final[24];pcm_final[25];pcm_final[26];pcm_final[27];pcm_final[28];pcm_final[29];pcm_final[30];pcm_final[31];pcm_final[32];pcm_final[33];pcm_final[34];pcm_final[35];pcm_final[36];pcm_final[37];pcm_final[38];pcm_final[39];pcm_final[40];pcm_final[41];pcm_final[42];pcm_final[43];pcm_final[44];pcm_final[45];pcm_final[46];pcm_final[47];pcm_final[48];pcm_final[49];pcm_final[50];pcm_final[51];pcm_final[52];pcm_final[53];pcm_final[54];pcm_final[55];pcm_final[56];pcm_final[57];pcm_final[58];pcm_final[59];pcm_final[60];pcm_final[61];pcm_final[62];pcm_final[63];pcm_final[64];pcm_final[65];pcm_final[66];pcm_final[67];pcm_final[68];pcm_final[69];pcm_final[70];pcm_final[71];pcm_final[72];pcm_final[73];pcm_final[74];pcm_final[75];pcm_final[76];pcm_final[77];pcm_final[78];pcm_final[79];pcm_final[80];pcm_final[81];pcm_final[82];pcm_final[83];pcm_final[84];pcm_final[85];pcm_final[86];pcm_final[87];pcm_final[88];pcm_final[89];pcm_final[90];pcm_final[91];pcm_final[92];pcm_final[93];pcm_final[94];pcm_final[95];pcm_final[96];pcm_final[97];pcm_final[98];pcm_final[99];pcm_final[100];pcm_final[101];pcm_final[102];pcm_final[103];pcm_final[104];pcm_final[105];pcm_final[106];pcm_final[107];pcm_final[108];pcm_final[109];pcm_final[110];pcm_final[111];pcm_final[112];pcm_final[113];pcm_final[114];pcm_final[115];pcm_final[116];pcm_final[117];pcm_final[118];pcm_final[119];pcm_final[120];pcm_final[121];pcm_final[122];pcm_final[123];pcm_final[124];pcm_final[125];pcm_final[126];pcm_final[127];pcm_final[128];pcm_final[129];pcm_final[130];pcm_final[131];pcm_final[132];pcm_final[133];pcm_final[134];pcm_final[135];pcm_final[136];pcm_final[137];pcm_final[138];pcm_final[139];pcm_final[140];pcm_final[141];pcm_final[142];pcm_final[143];pcm_final[144];pcm_final[145];pcm_final[146];pcm_final[147];pcm_final[148];pcm_final[149];pcm_final[150];pcm_final[151];pcm_final[152];pcm_final[153];pcm_final[154];pcm_final[155];pcm_final[156];pcm_final[157];pcm_final[158];pcm_final[159];pcm_final[160];pcm_final[161];pcm_final[162];pcm_final[163];pcm_final[164];pcm_final[165];pcm_final[166];pcm_final[167];pcm_final[168];pcm_final[169];pcm_final[170];pcm_final[171];pcm_final[172];pcm_final[173];pcm_final[174];pcm_final[175];pcm_final[176];pcm_final[177];pcm_final[178];pcm_final[179];pcm_final[180];pcm_final[181];pcm_final[182];pcm_final[183];pcm_final[184];pcm_final[185];pcm_final[186];pcm_final[187];pcm_final[188];pcm_final[189];pcm_final[190];pcm_final[191];pcm_final[192];pcm_final[193];pcm_final[194];pcm_final[195];pcm_final[196];pcm_final[197];pcm_final[198];pcm_final[199];pcm_final[200];pcm_final[201];pcm_final[202];pcm_final[203];pcm_final[204];pcm_final[205];pcm_final[206];pcm_final[207];pcm_final[208];pcm_final[209];pcm_final[210];pcm_final[211];pcm_final[212];pcm_final[213];pcm_final[214];pcm_final[215];pcm_final[216];pcm_final[217];pcm_final[218];pcm_final[219];pcm_final[220];pcm_final[221];pcm_final[222];pcm_final[223];pcm_final[224];pcm_final[225];pcm_final[226];pcm_final[227];pcm_final[228];pcm_final[229];pcm_final[230];pcm_final[231];pcm_final[232];pcm_final[233];pcm_final[234];pcm_final[235];pcm_final[236];pcm_final[237];pcm_final[238];pcm_final[239];pcm_final[240];pcm_final[241];pcm_final[242];pcm_final[243];pcm_final[244];pcm_final[245];pcm_final[246];pcm_final[247];pcm_final[248];pcm_final[249];pcm_final[250];pcm_final[251];pcm_final[252];pcm_final[253];pcm_final[254];pcm_final[255];pcm_final[256];pcm_final[257];pcm_final[258];pcm_final[259];pcm_final[260];pcm_final[261];pcm_final[262];pcm_final[263];pcm_final[264];pcm_final[265];pcm_final[266];pcm_final[267];pcm_final[268];pcm_final[269];pcm_final[270];pcm_final[271];pcm_final[272];pcm_final[273];pcm_final[274];pcm_final[275];pcm_final[276];pcm_final[277];pcm_final[278];pcm_final[279];pcm_final[280];pcm_final[281];pcm_final[282];pcm_final[283];pcm_final[284];pcm_final[285];pcm_final[286];pcm_final[287];pcm_final[288];pcm_final[289];pcm_final[290];pcm_final[291];pcm_final[292];pcm_final[293];pcm_final[294];pcm_final[295];pcm_final[296];pcm_final[297];pcm_final[298];pcm_final[299];pcm_final[300];pcm_final[301];pcm_final[302];pcm_final[303];pcm_final[304];pcm_final[305];pcm_final[306];pcm_final[307];pcm_final[308];pcm_final[309];pcm_final[310];pcm_final[311];pcm_final[312];pcm_final[313];pcm_final[314];pcm_final[315];pcm_final[316];pcm_final[317];pcm_final[318];pcm_final[319];pcm_final[320];pcm_final[321];pcm_final[322];pcm_final[323];pcm_final[324];pcm_final[325];pcm_final[326];pcm_final[327];pcm_final[328];pcm_final[329];pcm_final[330];pcm_final[331];pcm_final[332];pcm_final[333];pcm_final[334];pcm_final[335];pcm_final[336];pcm_final[337];pcm_final[338];pcm_final[339];pcm_final[340];pcm_final[341];pcm_final[342];pcm_final[343];pcm_final[344];pcm_final[345];pcm_final[346];pcm_final[347];pcm_final[348];pcm_final[349];pcm_final[350];pcm_final[351];pcm_final[352];pcm_final[353];pcm_final[354];pcm_final[355];pcm_final[356];pcm_final[357];pcm_final[358];pcm_final[359];pcm_final[360];pcm_final[361];pcm_final[362];pcm_final[363];pcm_final[364];pcm_final[365];pcm_final[366];pcm_final[367];pcm_final[368];pcm_final[369];pcm_final[370];pcm_final[371];pcm_final[372];pcm_final[373];pcm_final[374];pcm_final[375];pcm_final[376];pcm_final[377];pcm_final[378];pcm_final[379];pcm_final[380];pcm_final[381];pcm_final[382];pcm_final[383];pcm_final[384];pcm_final[385];pcm_final[386];pcm_final[387];pcm_final[388];pcm_final[389];pcm_final[390];pcm_final[391];pcm_final[392];pcm_final[393];pcm_final[394];pcm_final[395];pcm_final[396];pcm_final[397];pcm_final[398];pcm_final[399];pcm_final[400];pcm_final[401];pcm_final[402];pcm_final[403];pcm_final[404];pcm_final[405];pcm_final[406];pcm_final[407];pcm_final[408];pcm_final[409];pcm_final[410];pcm_final[411];pcm_final[412];pcm_final[413];pcm_final[414];pcm_final[415];pcm_final[416];pcm_final[417];pcm_final[418];pcm_final[419];pcm_final[420];pcm_final[421];pcm_final[422];pcm_final[423];pcm_final[424];pcm_final[425];pcm_final[426];pcm_final[427];pcm_final[428];pcm_final[429];pcm_final[430];pcm_final[431];pcm_final[432];pcm_final[433];pcm_final[434];pcm_final[435];pcm_final[436];pcm_final[437];pcm_final[438];pcm_final[439];pcm_final[440];pcm_final[441];pcm_final[442];pcm_final[443];pcm_final[444];pcm_final[445];pcm_final[446];pcm_final[447];pcm_final[448];pcm_final[449];pcm_final[450];pcm_final[451];pcm_final[452];pcm_final[453];pcm_final[454];pcm_final[455];pcm_final[456];pcm_final[457];pcm_final[458];pcm_final[459];pcm_final[460];pcm_final[461];pcm_final[462];pcm_final[463];pcm_final[464];pcm_final[465];pcm_final[466];pcm_final[467];pcm_final[468];pcm_final[469];pcm_final[470];pcm_final[471];pcm_final[472];pcm_final[473];pcm_final[474];pcm_final[475];pcm_final[476];pcm_final[477];pcm_final[478];pcm_final[479];pcm_final[480];pcm_final[481];pcm_final[482];pcm_final[483];pcm_final[484];pcm_final[485];pcm_final[486];pcm_final[487];pcm_final[488];pcm_final[489];pcm_final[490];pcm_final[491];pcm_final[492];pcm_final[493];pcm_final[494];pcm_final[495];pcm_final[496];pcm_final[497];pcm_final[498];pcm_final[499];pcm_final[500];pcm_final[501];pcm_final[502];pcm_final[503];pcm_final[504];pcm_final[505];pcm_final[506];pcm_final[507];pcm_final[508];pcm_final[509];pcm_final[510];pcm_final[511]

[componentInstances:cComponentManager]
instance[featureSink].type=cCsvSink
;instance[lldsink].type=cCsvSink

[featureSink:cCsvSink]
reader.dmLevel = isTurn;lld;lld_de;intens;mfcc1;lsp;mzcr;pitch
;reader.dmLevel = fftc40_select
filename = \cm[output(O){?}:output CSV file for summarised parameters, set to a valid filename to enable this output sink, data is appended if file exists]
append = 0
timestamp = 1
errorOnNoOutput = 1

;[lldsink:cCsvSink]
;reader.dmLevel = isTurn;lld;lld_de
;filename=\cm[output(D){?}:output csv file for LLD, disabled by default ?, only written if filename given]
;append = 0
;timestamp = 1
;errorOnNoOutput = 1


[componentInstances:cComponentManager]
instance[waveSink].type = cWaveSink

[waveSink:cWaveSink]
reader.dmLevel = wave
filename = \cm[outputfile(W){?}:file name of the output wav file]
sampleFormat = 16bit
blocksize=500


//////---------------------- END -------------------------///////
